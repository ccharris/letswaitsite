"use strict";var precacheConfig=[["/letswaitsite/index.html","cbea354012a6db4a0521e16f17ac23cb"],["/letswaitsite/static/css/main.5e400378.css","8bfa0d99a33835f5a7caaf2dc2717640"],["/letswaitsite/static/js/main.e02ce054.js","36eec333f0ca085586c141d656a02101"],["/letswaitsite/static/media/AleEmporium.d9a97f1b.png","d9a97f1b2f5179145b95406320a8123d"],["/letswaitsite/static/media/Brixx.ef612b2f.png","ef612b2f71ef35400aa7fd8db3a86b5e"],["/letswaitsite/static/media/DaveBusters.36ad7cad.png","36ad7cada856233c536ecb5b970854a6"],["/letswaitsite/static/media/Della.8024dfca.png","8024dfca2b4614594f1b3c017f8854ed"],["/letswaitsite/static/media/LetsWait-phone.e0ea3106.png","e0ea3106f9b338856b443470facf2157"],["/letswaitsite/static/media/Mortys.35010e41.png","35010e4165eae5c81c352c8f2eef888c"],["/letswaitsite/static/media/Pinheads.275f300f.png","275f300fac515eedd67c9c6c4ae2f70e"],["/letswaitsite/static/media/TopGolf.9d155f0c.png","9d155f0c96cc2361373649e3be182167"],["/letswaitsite/static/media/email.fc8ec9c1.svg","fc8ec9c1102956e23a62a6606c0dd7c8"],["/letswaitsite/static/media/facebookk.b32b9f68.svg","b32b9f68b25451305517cb3e3e8c98ae"],["/letswaitsite/static/media/horizlogo.e7b525fb.png","e7b525fbe32f6f86e35bb43d954998f2"],["/letswaitsite/static/media/insta.6f49516a.svg","6f49516ac8973ac34b410f3b86ba30f6"],["/letswaitsite/static/media/logo.5d5d9eef.svg","5d5d9eefa31e5e13a6610d9fa7a283bb"],["/letswaitsite/static/media/lwprices.e162ded0.png","e162ded0d57fd51fb2642d33db4fb059"],["/letswaitsite/static/media/snap.5a906d98.svg","5a906d98e2b728f495df36fa194b261d"],["/letswaitsite/static/media/twit.c047da45.svg","c047da4552867f3a5387f7b8b2fd2c7b"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,s){var n=new URL(e);return s&&n.pathname.match(s)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],s=new URL(t,self.location),n=createCacheKey(s,hashParamName,a,/\.\w{8}\./);return[s.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(s){return setOfCachedUrls(s).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return s.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),s="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,s),e=urlsToCacheKeys.has(a));var n="/letswaitsite/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});